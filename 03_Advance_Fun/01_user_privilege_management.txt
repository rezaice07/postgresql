
POSTGRES DBA - USER PRIVILEGE MANAGEMENT
-----------------------------------------------
REFERENCES:
	https://www.youtube.com/watch?v=8YSp-wTELNs&ab_channel=databasetorque
	https://tableplus.com/blog/2018/04/postgresql-how-to-grant-access-to-users.html
	https://www.commandprompt.com/education/how-to-grant-all-privileges-to-users-in-postgresql/
	
#let's create role and user 

	CREATE ROLE SALES PASSWORD '123';
	CREATE USER USERA PASSWORD '123';
	CREATE USER USERB WITH LOGIN PASSWORD '123';

#let see the list of roles
	\du

#let's try to connect by using sales, usera and userb and will give different messages
	PS C:\Users\Reja> psql -U sales;
	Password for user sales:
	psql: error: connection to server at "localhost" (::1), port 5432 failed: FATAL:  role "sales" is not permitted to log in

	PS C:\Users\Reja> psql -U usera;
	Password for user usera:
	psql: error: connection to server at "localhost" (::1), port 5432 failed: FATAL:  database "usera" does not exist

	PS C:\Users\Reja> psql -U userb;
	Password for user userb:
	psql: error: connection to server at "localhost" (::1), port 5432 failed: FATAL:  database "userb" does not exist

# A Connection by using the database for the users usera and userb
	PS C:\Users\Reja> psql -U usera -d postgres;
	postgres=> \q
	PS C:\Users\Reja> psql -U userb -d postgres;
	
	**Note: In this case, don't have any permissions on postgres db for user usera and userb
	So how they conncted using database postgres?
	Answer is implicit public
	
# Let's try to create a databas by using user USERA

	PS C:\Users\Reja> psql -U usera -d postgres;

	postgres=> CREATE DATABASE TESTDB;
	ERROR:  permission denied to create database

# Let's create a database by the superuser POSTGRES
	PS C:\Users\Reja> psql -U postgres -d postgres;
	postgres=# CREATE DATABASE TESTDB;
	CREATE DATABASE

	PS C:\Users\Reja> psql -U usera -d testdb;

#Now we'll revoke public access from databas testdb by superuser postgres	
	PS C:\Users\Reja> psql -U postgres -d postgres;

	postgres=# revoke all on database testdb from public;
	REVOKE

#let's try to login user usera and it will show the error
	postgres=# \q
	PS C:\Users\Reja> psql -U usera -d testdb;
	Password for user usera:
	psql: error: connection to server at "localhost" (::1), port 5432 failed: FATAL:  permission denied for database "testdb"
	DETAIL:  User does not have CONNECT privilege.

#Now we'll give connect permission to user usera
	PS C:\Users\Reja> psql -U postgres -d postgres;

	postgres=# GRANT CONNECT ON DATABASE testdb TO usera;
	GRANT
	
	PS C:\Users\Reja> psql -U usera -d testdb;
	
#Now we'll revoke public access from databas testdb by superuser postgres	again
	PS C:\Users\Reja> psql -U postgres -d postgres;

	postgres=# revoke all on database testdb from public;
	REVOKE	
	
#We have a role SALES and will assign to user USERA and USERB by superuser

PS C:\Users\Reja> psql -U postgres -d postgres;

	postgres=# GRANT SALES TO USERA;
	GRANT ROLE
	postgres=# GRANT SALES TO USERB;
	GRANT ROLE

#Now we will give connect permission to role sales
	postgres=# GRANT CONNECT ON DATABASE TESTDB TO SALES;
	GRANT
	
#Let's try to login	
	postgres=# \q
	PS C:\Users\Reja> psql -U usera -d testdb;
	
#Let's connect to the user usera and try to add database schema and so on
	psql -U usera -d testdb;

	testdb=> CREATE DATABASE TESTDB2;
	ERROR:  permission denied to create database
	testdb=> CREATE SCHEMA MY_SCHEMA;
	ERROR:  permission denied for database testdb
	testdb=> CREATE TABLE TEST_TAB(ID int,TITLE TEXT);
	ERROR:  permission denied for schema public
	LINE 1: CREATE TABLE TEST_TAB(ID int,TITLE TEXT);
						 ^
	testdb=> CREATE USER TEST_USER WITH LOGIN PASSWORD '123';
	ERROR:  permission denied to create role
	DETAIL:  Only roles with the CREATEROLE attribute may create roles.

#let's connect with the superuser  and connect to the databas testdb and revoke all the public schema permission from implicit public. let's do it
	psql -U postgres -d postgres;
	postgres=# \c testdb
	testdb=# revoke all on schema public from public;
	REVOKE
	
#Grant CREATE TABLE Permission on a Specific Schema:
	testdb=# GRANT CREATE ON SCHEMA public TO sales;
	
#Grant CREATE TABLE Permission on the Entire Database:
	testdb=# GRANT CREATE ON DATABASE testdb TO sales;
	
#Grant DML permission on specific schema to rolse
	testdb=# GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO sales;
	
#Grant all privileges on all tables in the schema:	
	testdb=# GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO sales;
	
# Grant all privileges on all sequences in the schema:	
	testdb=# GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA schema_name TO sales;
	
#Grant all privileges on the database:	
	testdb=# GRANT ALL PRIVILEGES ON DATABASE database_name TO sales;
	
#Grant permission to create database:	
	testdb=# ALTER USER usera CREATEDB;
	
#Make a user superuser:	
	testdb=# ALTER USER usera WITH SUPERUSER;

#Remove superuser status:	
	testdb=# ALTER USER usera WITH NOSUPERUSER;
	
#Those statements above only affect the current existing tables. 
To apply to newly created tables, you need to use alter default. For example:
	
	testdb=# ALTER DEFAULT PRIVILEGES
	FOR USER usera
	IN SCHEMA public
	GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO sales;

#Check Schema
	testdb=> show search_path;
	   search_path
	-----------------
	 "$user", public
	(1 row)
                     ^
	testdb=> CREATE TABLE public.TEST_TAB(ID INT, TITLE TEXT);
	ERROR:  permission denied for schema public
	LINE 1: CREATE TABLE public.TEST_TAB(ID INT, TITLE TEXT);

#Check current schema
	postgres=# select current_user;
	 current_user
	--------------
	 postgres
	(1 row)
						 ^
#schema: is a logical container;
